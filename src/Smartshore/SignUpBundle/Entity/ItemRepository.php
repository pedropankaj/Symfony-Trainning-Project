<?php

namespace Smartshore\SignUpBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * ItemRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ItemRepository extends EntityRepository
{
    function findItemOrders($list_id,$top_bottom){

        $query = $this->createQueryBuilder('o')
            ->select('v')
            ->from('SmartshoreSignUpBundle:Item', 'v')
            ->where('v.lists = :listid')
            ->andWhere('v.listOrder = :top_bottom')
            //->having('u.ListOrder = top')
            //->andHaving('v.ListOrder = bottom')
            ->setParameter('listid',$list_id)
            ->setParameter('top_bottom',$top_bottom);
        if($top_bottom=='top'){
            $query->orderBy('v.id', 'DESC');
            }else{
            $query->orderBy('v.id', 'ASC');
            }
        //print_r($query); die();
        //return $query;
        //$em = $this->getEntityManager();
        //if($top_bottom=='top'){
            //$qury='SELECT u.* from SmartshoreSignUpBundle:Item as u where u.lists = :listid and u.listOrder = :top_bottom UNION SELECT u.* from SmartshoreSignUpBundle:Item as u where u.lists = :listid and u.listOrder = :top_bottom';
        //echo $qury; die();
        //}else{
            //$qury='SELECT u from SmartshoreSignUpBundle:Item as u where u.lists = :listid and u.listOrder = :top_bottom order by u.id ASC';
        //}
        //$query = $em->createQuery($qury)->setParameter('listid',$list_id)->setParameter('top_bottom',$top_bottom);

        $result = $query->getQuery()->getResult();
      return $result;
    }
}
